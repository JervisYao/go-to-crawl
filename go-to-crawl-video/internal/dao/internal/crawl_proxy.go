// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// CrawlProxyDao is the data access object for table crawl_proxy.
type CrawlProxyDao struct {
	table   string            // table is the underlying table name of the DAO.
	group   string            // group is the database configuration group name of current DAO.
	columns CrawlProxyColumns // columns contains all the column names of Table for convenient usage.
}

// CrawlProxyColumns defines and stores column names for table crawl_proxy.
type CrawlProxyColumns struct {
	Id           string // 主键ID
	TargetDomain string // 目标网站顶级域名
	ProxyUrl     string // 代理地址
	ProxyStatus  string // 代理状态. 0-停用,1-使用中
	CreateUser   string // 创建者
	CreateTime   string // 创建时间
	UpdateUser   string // 修改者
	UpdateTime   string // 修改时间
}

// crawlProxyColumns holds the columns for table crawl_proxy.
var crawlProxyColumns = CrawlProxyColumns{
	Id:           "id",
	TargetDomain: "target_domain",
	ProxyUrl:     "proxy_url",
	ProxyStatus:  "proxy_status",
	CreateUser:   "create_user",
	CreateTime:   "create_time",
	UpdateUser:   "update_user",
	UpdateTime:   "update_time",
}

// NewCrawlProxyDao creates and returns a new DAO object for table data access.
func NewCrawlProxyDao() *CrawlProxyDao {
	return &CrawlProxyDao{
		group:   "default",
		table:   "crawl_proxy",
		columns: crawlProxyColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *CrawlProxyDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *CrawlProxyDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *CrawlProxyDao) Columns() CrawlProxyColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *CrawlProxyDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *CrawlProxyDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *CrawlProxyDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
