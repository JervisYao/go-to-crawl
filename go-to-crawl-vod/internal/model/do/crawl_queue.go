// =================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// =================================================================================

package do

import (
	"github.com/gogf/gf/v2/frame/g"
	"github.com/gogf/gf/v2/os/gtime"
)

// CrawlQueue is the golang structure of table crawl_queue for DAO operations like Where/Data.
type CrawlQueue struct {
	g.Meta          `orm:"table:crawl_queue, do:true"`
	Id              interface{} // 主键ID
	BusinessType    interface{} // 业务类型。0-普通类型；1-抓付费资源类型
	HostLabel       interface{} // 主机标签。任务处理的主机的标签(config.yaml配置)。由哪台机器领取的M3U8下载任务就不能变更了
	CountryCode     interface{} // 国家二字码.(eg: CN,US,SG等)
	VideoYear       interface{} // 视频发布年份
	VideoCollId     interface{} // 视频集ID（视频集ID，不限于电视剧,-1代表单集视频，或者说电影）
	VideoItemId     interface{} // 视频集对应视频项ID（不限于电视剧的剧集）
	CrawlType       interface{} // 抓取类型.1-页面URL;2-文件m3u8;3-MP4地址
	CrawlStatus     interface{} // //抓取状态.0-创建任务;1-M3U8 URL抓取中;2-M3U8 URL抓取失败;3-M3U8 URL抓取完成;4-M3U8下载中;5-M3U8下载异常;6-M3U8下载结束
	CrawlSeedUrl    interface{} // 种子URL
	CrawlSeedParams interface{} // 种子URL携带的参数。保存Json串
	CrawlM3U8Url    interface{} // m3u8 url
	CrawlM3U8Text   interface{} // M3U8文本
	CrawlM3U8Cnt    interface{} // m3u8 url抓取次数
	CrawlM3U8Notify interface{} // crawl_m3u8_cnt次数超过阈值告警,需要人工介入,大概率要优化代码了
	ErrorMsg        interface{} // 错误信息
	CreateUser      interface{} // 创建者
	CreateTime      *gtime.Time // 创建时间
	UpdateUser      interface{} // 修改者
	UpdateTime      *gtime.Time // 修改时间
}
